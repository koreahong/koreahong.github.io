---
layout: post
title: '파이썬 클린코드'
subtitle: '구조화된 코드는 어떤 거인가'
categories: Computer_Science
tags : software
comments: False
---

> 파이썬 클린코드 요약

저자 : 마리아노 아나야

# 1. 소개, 코트 포매팅과 도구 
## 클린코드 개요

- 정의
	- 구체적인 정의 없음. 단, PEP-8과 코드스타일을 넘어 유지보수성과 소프트웨어 품질에 관한 것임
- 중요성 
	- 유지보수성 향상
	- 기술부채 감소, 부채 : 소프트웨적 결함, 코드는 지금 바꾸는 것보다 미래에 변경하는 것이 더 어렵기 때문에 부채임
	- 애자일 개발을 통한 효과적인 작업 진행
	- 성공적인 프로젝트 관리

- 포매팅과 문서화의 중요성
	- 포매팅 : 레이아웃 -> PEP-8, 코딩스타일
	- 문서화 : 어노테이션 명시, docstring 작성
<<<<<<< HEAD
		- docstring 
			- 컴포넌트(모듈,클래스, 매서드 또는 함수)에 대한 문서화, 가능한 많은 docstring을 추가하는 것이 좋음
			- 코드가 좀 더 커지게 되고, 상세한 정보가 필요함
		- 어노테이션
			- 코드사용자에게 함수인자에 대한 힌트를 주는 것 
			``` {.python}
			      Fuctnion annotation
			      def func(arg1: str, arg2: 1+2, arg3: 'this is annotation') -> bool
    			```
   			위와 같이 파라미터에 : expression 형태로 매개변수 마다 annotation 을 쓸 수 있다.  
 		 	annotation 에는 arg1 처럼 매개변수의 type 을 써놓을 수도 있고,  
			arg2 의 annotation 처럼 덧셈과 같은 간단한 연산 표현도 작성 가능하며,  
			arg3 처럼 string 형태로도 작성 가능하다.  
			또한, function 의 return 값에 대해서는 -> expression 형태로 사용한다.  
			return 또한 매개변수와 사용 방법은 동일하다.  
			출처: https://bluese05.tistory.com/78 [ㅍㅍㅋㄷ]  

- 클린코드 자동화
	- Mypy, Pylint, Black 사용
=======
		- docstring : 컴포넌트(모듈,클래스, 매서드 또는 함수)에 대한 문서화, 가능한 많은 docstring을 추가하는 것이 좋음
		- 어노테이션 : 코드사용자에게 함수인자에 대한 힌트를 주는 것 
			```python
			      Fuctnion annotation
			      def func(arg1: str, arg2: 1+2, arg3: 'this is annotation') -> bool
    			```
   			위와 같이 파라미터에 : expression 형태로 매개변수 마다 annotation 을 쓸 수 있다. 
 		 	annotation 에는 arg1 처럼 매개변수의 type 을 써놓을 수도 있고,
			arg2 의 annotation 처럼 덧셈과 같은 간단한 연산 표현도 작성 가능하며, 
			arg3 처럼 string 형태로도 작성 가능하다. 
			또한, function 의 return 값에 대해서는 -> expression 형태로 사용한다. 
			return 또한 매개변수와 사용 방법은 동일하다.
>>>>>>> 8b466bb04a6d1b5e48487962efb39615ba8343f8
