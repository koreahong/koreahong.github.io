---
layout: post
title: '알고리즘 유형정리'
#subtitle: '구조화된 코드는 어떤 거인가'
categories: algorithm
#tags : software  
comments: False
---

> 모든 알고리즘 복습

# 종류에 상관없는 Tip
- 정렬할일이 있으면 for문에서 sorted를 먼저 사용하자  
- 입력값이 많으면 pop()과 pop(0)은 o(1), O(N)으로 차이가 심하니 반드시 주의할 것  


# 배열
> Tip

- min, max를 사용하는 대신에 if-else문으로 풀어쓰면 훨씬 빠른 결과를 얻음
    - 특히 list를 통채로 min, max하는 경우는 O(N)함
    - max나 min을 None으로 설정해서 진행할 수 있음

> 유형

- 나빼고 나머지 곱하기  
    - leetcode 238
    - 첫번째 1 놓고 곱하기
    - 반대쪽 1 놓고 곱하기
    
# 연결리스트

> 유형

- 연결리스트 중간 찾기
    - leetcode 234
    - 러너활용, slow, fast
    - fast가 끝까지 갈때 slow는 중간까지 가는 것을 활용
    
# 스택, 큐

> Tip

- Counter 활용해서 문자별 개수 파악하여 진행해볼 것
- 결과가 인덱스별 결과면 결과배열을 [0] * 개수해서 선언하여 진행할 것을 고려

# 데크, 우선순위 큐

> Tip

- 우선순위 큐는 heap으로 주로 구현, heapq는 최소힙으로 구현되어 있음

# 해시 테이블
> 개념

- 충돌 방지 방법
    - 개별 체이닝 : 연결리스트로 연결
    - 오픈 어드레싱 : 빈공간에 저장, 로드 펙터 1이상 저장 불가, 파이썬 기본, 일정구간까지 성능이 좋음
- 해시 함수
    - 임의 크기 데이터를 고정 크기 값으로 변형하는데 사용되는 함수

> Tip

    - 포인터 활용하는 풀리는 문제가 많음

# 그래프

> Tip

- 빨리 => BFS(다익스트라, 도달했을 때 값)
- 이외 => DFS
- pop()과 pop(0)은 성능에서 차이가 남으로 deque()로 선언해서 진행, 혹은 역으로 삽입
- 방문한 체크리스트 선언
- 다익스트라 -> 최소힙, heapq모듈 사용

# 트리
> 개념

- 트리는 순환을 갖지 않는 그래프

# 힙
> 개념 

- 힙 : 부모와 자식간에는 서열이 확실하다
- 이진트리와 차이점 : 이진트리는 좌우간에 서열이 확실하고, 힙은 상하간에 서열이 확실하다
- 사용용도 : 우선순위 큐에 활용되며, 최소, 최대와 관련된 문제에 사용됨
