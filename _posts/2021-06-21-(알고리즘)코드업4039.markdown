---
layout: post
title: '(알고리즘)코드업4039 놀이공원'
#subtitle: 'bfs&dfs'
categories: algorithm
tags : bfs&dfs
comments: False
---
> dfs&bfs

1. 확인해볼 사항
바론 인접한 행렬의 값찾아서 카운트 올리기
- bfs가 적절

2. 방법
- 상하좌우 루프 만들어서 돌리기



```python
#한곳을 여러군데에서 동시에 도착하는 경우
  #비교하려면 방문리스트를 생성해서 비교
#주변탐색 -> bfs

from collections import deque
import copy
import sys 
sys.setrecursionlimit(10000)

N, M = map(int,sys.stdin.readline().split())
graph = [list(map(int,sys.stdin.readline().split())) for _ in range(N)]

visited = list([0] * M for _ in range(N))
dx = [1,-1,0,0]
dy = [0,0,1,-1]

def bfs(x,y):
  queue = deque()
  queue.append((x,y))

  visited[0][0] = 1


  while queue:
    x, y = queue.popleft()

    for i in range(4):
      nx = x + dx[i]
      ny = y + dy[i]
      if 0<=nx<N and 0<=ny<M and visited[nx][ny] == 0:
        if abs(graph[nx][ny] - graph[x][y]) <= 1:
            visited[nx][ny] = visited[x][y] + 1
            queue.append((nx,ny))

bfs(0,0)
print(visited[-1][-1])
  ```







